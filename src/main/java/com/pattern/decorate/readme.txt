装饰者模式：
    也叫包装者模式
    为了某个实现类在不修改原始类的基础上进行动态的覆盖或增加方法
    可以采用装饰器模式
    实现类要保持跟原有类的层级关系
    装饰器模式是特殊的适配器模式
     装饰器                                    适配器
     非常特别的适配器                           可以不保留层级关系
     装饰者和被装饰者都要                       通常采用代理或者继承进行包装
     实现同一个接口，主要目的是为了扩展
     保留oop关系
     满足is-a的关系                              满足has-a的关系
     注重覆盖和扩展                              注重兼容和转换
例如；
InputeStream 类就是以抽象组件存在的：而FileInputStream就是具体组件，
它实现了抽象组件的所有接口；FilterInputStream类无疑就是装饰角色，
它实现了InputStream类的所有接口，并且持有InputStream的对象实例的引用